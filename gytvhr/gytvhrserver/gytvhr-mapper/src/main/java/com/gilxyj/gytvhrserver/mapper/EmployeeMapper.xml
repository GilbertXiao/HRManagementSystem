<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gilxyj.gytvhrserver.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.gilxyj.gytvhrserver.bean.Employee">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="CHAR"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="idCard" property="idCard" jdbcType="CHAR"/>
        <result column="wedlock" property="wedlock" jdbcType="CHAR"/>
        <result column="nationId" property="nationId" jdbcType="INTEGER"/>
        <result column="nativePlace" property="nativePlace" jdbcType="VARCHAR"/>
        <result column="politicId" property="politicId" jdbcType="INTEGER"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="departmentId" property="departmentId" jdbcType="INTEGER"/>
        <result column="jobLevelId" property="jobLevelId" jdbcType="INTEGER"/>
        <result column="posId" property="posId" jdbcType="INTEGER"/>
        <result column="engageForm" property="engageForm" jdbcType="VARCHAR"/>
        <result column="tiptopDegree" property="tiptopDegree" jdbcType="CHAR"/>
        <result column="specialty" property="specialty" jdbcType="VARCHAR"/>
        <result column="school" property="school" jdbcType="VARCHAR"/>
        <result column="beginDate" property="beginDate" jdbcType="DATE"/>
        <result column="workState" property="workState" jdbcType="CHAR"/>
        <result column="workID" property="workID" jdbcType="CHAR"/>
        <result column="contractTerm" property="contractTerm" jdbcType="DOUBLE"/>
        <result column="conversionTime" property="conversionTime" jdbcType="DATE"/>
        <result column="notWorkDate" property="notWorkDate" jdbcType="DATE"/>
        <result column="beginContract" property="beginContract" jdbcType="DATE"/>
        <result column="endContract" property="endContract" jdbcType="DATE"/>
        <result column="workAge" property="workAge" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="BaseResultAllMap" type="com.gilxyj.gytvhrserver.bean.Employee" extends="BaseResultMap">
        <association property="department" javaType="com.gilxyj.gytvhrserver.bean.Department">
            <id column="did" property="id" jdbcType="INTEGER"/>
            <result column="dname" property="name" jdbcType="VARCHAR"/>
            <result column="dparentId" property="parentId" jdbcType="INTEGER"/>
            <result column="ddepPath" property="depPath" jdbcType="VARCHAR"/>
            <result column="denabled" property="enabled" jdbcType="BIT"/>
            <result column="disParent" property="isParent" jdbcType="BIT"/>
        </association>
        <association property="nation" javaType="com.gilxyj.gytvhrserver.bean.Nation">
            <id column="nid" property="id"/>
            <result column="nname" property="name"/>
        </association>
        <association property="position" javaType="com.gilxyj.gytvhrserver.bean.Position">

            <id column="pid" property="id"/>
            <result column="pname" property="name"/>
            <result column="pcreate_date" property="createDate"/>
            <result column="penabled" property="enabled"/>
        </association>
        <association property="politicsStatus" javaType="com.gilxyj.gytvhrserver.bean.PoliticsStatus">

            <id column="polid" property="id"/>
            <result column="polname" property="name"/>
        </association>
        <association property="jobLevel" javaType="com.gilxyj.gytvhrserver.bean.JobLevel">

            <id column="id" property="id"/>
            <result column="jname" property="name"/>
            <result column="jtitle_level" property="titleLevel"/>
            <result column="jcreate_date" property="createDate"/>
            <result column="jenabled" property="enabled"/>
        </association>
        <association property="salary" javaType="com.gilxyj.gytvhrserver.bean.Salary">
            <id column="sid" property="id"/>
            <result column="sbonus" property="bonus"/>
            <result column="slunchSalary" property="lunchSalary"/>
            <result column="strafficSalary" property="trafficSalary"/>
            <result column="sbasicSalary" property="basicSalary"/>
            <result column="sallSalary" property="allSalary"/>
            <result column="spensionBase" property="pensionBase"/>
            <result column="spensionPer" property="pensionPer"/>
            <result column="screateDate" property="createDate"/>
            <result column="smedicalBase" property="medicalBase"/>
            <result column="smedicalPer" property="medicalPer"/>
            <result column="saccumulationFundBase" property="accumulationFundBase"/>
            <result column="saccumulationFundPer" property="accumulationFundPer"/>
            <result column="sname" property="name"/>
        </association>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, email,
    phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, specialty,
    school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate,
    beginContract, endContract, workAge
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from employee
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from employee
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.gilxyj.gytvhrserver.bean.Employee">
        insert into employee (id, name, gender,
        birthday, idCard, wedlock, nationId,
        nativePlace, politicId, email,
        phone, address, departmentId,
        jobLevelId, posId, engageForm,
        tiptopDegree, specialty, school,
        beginDate, workState, workID,
        contractTerm, conversionTime, notWorkDate,
        beginContract, endContract, workAge
        )
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR},
        #{birthday,jdbcType=DATE}, #{idCard,jdbcType=CHAR}, #{wedlock,jdbcType=CHAR}, #{nationId,jdbcType=INTEGER},
        #{nativePlace,jdbcType=VARCHAR}, #{politicId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR},
        #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER},
        #{jobLevelId,jdbcType=INTEGER}, #{posId,jdbcType=INTEGER}, #{engageForm,jdbcType=VARCHAR},
        #{tiptopDegree,jdbcType=CHAR}, #{specialty,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR},
        #{beginDate,jdbcType=DATE}, #{workState,jdbcType=CHAR}, #{workID,jdbcType=CHAR},
        #{contractTerm,jdbcType=DOUBLE}, #{conversionTime,jdbcType=DATE}, #{notWorkDate,jdbcType=DATE},
        #{beginContract,jdbcType=DATE}, #{endContract,jdbcType=DATE}, #{workAge,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.gilxyj.gytvhrserver.bean.Employee" useGeneratedKeys="true" keyProperty="id">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="idCard != null">
                idCard,
            </if>
            <if test="wedlock != null">
                wedlock,
            </if>
            <if test="nationId != null">
                nationId,
            </if>
            <if test="nativePlace != null">
                nativePlace,
            </if>
            <if test="politicId != null">
                politicId,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="departmentId != null">
                departmentId,
            </if>
            <if test="jobLevelId != null">
                jobLevelId,
            </if>
            <if test="posId != null">
                posId,
            </if>
            <if test="engageForm != null">
                engageForm,
            </if>
            <if test="tiptopDegree != null">
                tiptopDegree,
            </if>
            <if test="specialty != null">
                specialty,
            </if>
            <if test="school != null">
                school,
            </if>
            <if test="beginDate != null">
                beginDate,
            </if>
            <if test="workState != null">
                workState,
            </if>
            <if test="workID != null">
                workID,
            </if>
            <if test="contractTerm != null">
                contractTerm,
            </if>
            <if test="conversionTime != null">
                conversionTime,
            </if>
            <if test="notWorkDate != null">
                notWorkDate,
            </if>
            <if test="beginContract != null">
                beginContract,
            </if>
            <if test="endContract != null">
                endContract,
            </if>
            <if test="workAge != null">
                workAge,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=CHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=CHAR},
            </if>
            <if test="wedlock != null">
                #{wedlock,jdbcType=CHAR},
            </if>
            <if test="nationId != null">
                #{nationId,jdbcType=INTEGER},
            </if>
            <if test="nativePlace != null">
                #{nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="politicId != null">
                #{politicId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="jobLevelId != null">
                #{jobLevelId,jdbcType=INTEGER},
            </if>
            <if test="posId != null">
                #{posId,jdbcType=INTEGER},
            </if>
            <if test="engageForm != null">
                #{engageForm,jdbcType=VARCHAR},
            </if>
            <if test="tiptopDegree != null">
                #{tiptopDegree,jdbcType=CHAR},
            </if>
            <if test="specialty != null">
                #{specialty,jdbcType=VARCHAR},
            </if>
            <if test="school != null">
                #{school,jdbcType=VARCHAR},
            </if>
            <if test="beginDate != null">
                #{beginDate,jdbcType=DATE},
            </if>
            <if test="workState != null">
                #{workState,jdbcType=CHAR},
            </if>
            <if test="workID != null">
                #{workID,jdbcType=CHAR},
            </if>
            <if test="contractTerm != null">
                #{contractTerm,jdbcType=DOUBLE},
            </if>
            <if test="conversionTime != null">
                #{conversionTime,jdbcType=DATE},
            </if>
            <if test="notWorkDate != null">
                #{notWorkDate,jdbcType=DATE},
            </if>
            <if test="beginContract != null">
                #{beginContract,jdbcType=DATE},
            </if>
            <if test="endContract != null">
                #{endContract,jdbcType=DATE},
            </if>
            <if test="workAge != null">
                #{workAge,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.gilxyj.gytvhrserver.bean.Employee">
        update employee
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=CHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="idCard != null">
                idCard = #{idCard,jdbcType=CHAR},
            </if>
            <if test="wedlock != null">
                wedlock = #{wedlock,jdbcType=CHAR},
            </if>
            <if test="nationId != null">
                nationId = #{nationId,jdbcType=INTEGER},
            </if>
            <if test="nativePlace != null">
                nativePlace = #{nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="politicId != null">
                politicId = #{politicId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                departmentId = #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="jobLevelId != null">
                jobLevelId = #{jobLevelId,jdbcType=INTEGER},
            </if>
            <if test="posId != null">
                posId = #{posId,jdbcType=INTEGER},
            </if>
            <if test="engageForm != null">
                engageForm = #{engageForm,jdbcType=VARCHAR},
            </if>
            <if test="tiptopDegree != null">
                tiptopDegree = #{tiptopDegree,jdbcType=CHAR},
            </if>
            <if test="specialty != null">
                specialty = #{specialty,jdbcType=VARCHAR},
            </if>
            <if test="school != null">
                school = #{school,jdbcType=VARCHAR},
            </if>
            <if test="beginDate != null">
                beginDate = #{beginDate,jdbcType=DATE},
            </if>
            <if test="workState != null">
                workState = #{workState,jdbcType=CHAR},
            </if>
            <if test="workID != null">
                workID = #{workID,jdbcType=CHAR},
            </if>
            <if test="contractTerm != null">
                contractTerm = #{contractTerm,jdbcType=DOUBLE},
            </if>
            <if test="conversionTime != null">
                conversionTime = #{conversionTime,jdbcType=DATE},
            </if>
            <if test="notWorkDate != null">
                notWorkDate = #{notWorkDate,jdbcType=DATE},
            </if>
            <if test="beginContract != null">
                beginContract = #{beginContract,jdbcType=DATE},
            </if>
            <if test="endContract != null">
                endContract = #{endContract,jdbcType=DATE},
            </if>
            <if test="workAge != null">
                workAge = #{workAge,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.gilxyj.gytvhrserver.bean.Employee">
        update employee
        set name = #{name,jdbcType=VARCHAR},
        gender = #{gender,jdbcType=CHAR},
        birthday = #{birthday,jdbcType=DATE},
        idCard = #{idCard,jdbcType=CHAR},
        wedlock = #{wedlock,jdbcType=CHAR},
        nationId = #{nationId,jdbcType=INTEGER},
        nativePlace = #{nativePlace,jdbcType=VARCHAR},
        politicId = #{politicId,jdbcType=INTEGER},
        email = #{email,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        address = #{address,jdbcType=VARCHAR},
        departmentId = #{departmentId,jdbcType=INTEGER},
        jobLevelId = #{jobLevelId,jdbcType=INTEGER},
        posId = #{posId,jdbcType=INTEGER},
        engageForm = #{engageForm,jdbcType=VARCHAR},
        tiptopDegree = #{tiptopDegree,jdbcType=CHAR},
        specialty = #{specialty,jdbcType=VARCHAR},
        school = #{school,jdbcType=VARCHAR},
        beginDate = #{beginDate,jdbcType=DATE},
        workState = #{workState,jdbcType=CHAR},
        workID = #{workID,jdbcType=CHAR},
        contractTerm = #{contractTerm,jdbcType=DOUBLE},
        conversionTime = #{conversionTime,jdbcType=DATE},
        notWorkDate = #{notWorkDate,jdbcType=DATE},
        beginContract = #{beginContract,jdbcType=DATE},
        endContract = #{endContract,jdbcType=DATE},
        workAge = #{workAge,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="getEmpByPage" resultMap="BaseResultAllMap">
        select
        e.id,e.name,e.gender,e.birthday,e.idCard,e.wedlock,e.nationId,e.nativePlace,e.politicId,e.email,e.phone,e.address,e.departmentId,e.jobLevelId,e.posId,e.engageForm,e.tiptopDegree,e.specialty,e.school,e.beginDate,e.workState,e.workID,e.contractTerm,e.conversionTime,e.notWorkDate,e.beginContract,e.endContract,e.workAge,
        d.id as did,d.name as dname,d.parentId as dparentId,d.depPath as ddepPath,d.enabled as
        denabled,d.isParent as disParent,n.id as nid,n.name as nname,j.id as jid,j.name as jname,j.titleLevel as
        jtitleLevel,j.createDate as jcreateDate,j.enabled as jenabled,p.id as pid,p.name as pname,p.createDate as
        pcreateDate,p.enabled as penabled,pol.id as polid,pol.name as polname,s.id as sid,s.basicSalary as
        sbasicSalary,s.bonus as sbonus,s.lunchSalary as slunchSalary,s.trafficSalary as strafficSalary,s.allSalary as
        sallSalary,s.pensionBase as spensionBase,s.pensionPer as spensionPer,s.createDate as screateDate,s.medicalBase
        as smedicalBase,s.medicalPer as smedicalPer,s.accumulationFundBase as
        saccumulationFundBase,s.accumulationFundPer as saccumulationFundPer,s.name as sname from employee e left join
        department d on e.departmentId=d.id left join nation n on e.nationId=n.id left join joblevel j on
        e.jobLevelId=j.id left join position p on e.posId=p.id left join politicsstatus pol on e.politicId=pol.id left
        join empsalary es on e.id=es.eid left join salary s on es.sid=s.id
        <where>
            <if test="employee !=null">
                <if test="employee.name != null and employee.name != ''">
                   and e.name like concat('%',#{employee.name},'%')
                </if>
                <if test="employee.nationId != null and employee.nationId != ''">
                    and e.nationId=#{employee.nationId}
                </if>
                <if test="employee.politicId != null and employee.politicId != ''">
                    and e.politicId=#{employee.politicId}
                </if>
                <if test="employee.departmentId != null and employee.departmentId != ''">
                    and e.departmentId=#{employee.departmentId}
                </if>
                <if test="employee.jobLevelId != null and employee.jobLevelId != ''">
                    and e.jobLevelId=#{employee.jobLevelId}
                </if>
                <if test="employee.posId != null and employee.posId != ''">
                    and e.posId=#{employee.posId}
                </if>
                <if test="employee.engageForm != null and employee.engageForm != ''">
                    and e.engageForm=#{employee.engageForm}
                </if>
                <if test="dateRange != null">
                    and e.beginDate between #{dateRange[0]} and #{dateRange[1]}
                </if>

            </if>
        </where>
        order by e.id
        <if test="page != null and size != null">
            limit #{page},#{size}
        </if>

    </select>
    <select id="getTotal" resultType="java.lang.Long">
        select count(1) from employee e
        <where>
            <if test="employee !=null">
                <if test="employee.name != null and employee.name != ''">
                    and e.name like concat('%',#{employee.name},'%')
                </if>
                <if test="employee.nationId != null and employee.nationId != ''">
                    and e.nationId=#{employee.nationId}
                </if>
                <if test="employee.politicId != null and employee.politicId != ''">
                    and e.politicId=#{employee.politicId}
                </if>
                <if test="employee.departmentId != null and employee.departmentId != ''">
                    and e.departmentId=#{employee.departmentId}
                </if>
                <if test="employee.jobLevelId != null and employee.jobLevelId != ''">
                    and e.jobLevelId=#{employee.jobLevelId}
                </if>
                <if test="employee.posId != null and employee.posId != ''">
                    and e.posId=#{employee.posId}
                </if>
                <if test="employee.engageForm != null and employee.engageForm != ''">
                    and e.engageForm=#{employee.engageForm}
                </if>
                <if test="dateRange != null">
                    and e.beginDate between #{dateRange[0]} and #{dateRange[1]}
                </if>
            </if>
        </where>
    </select>
    <select id="getMaxWorkIdByMaxId" resultType="java.lang.String">
        select workID from employee where id= (select max(id) from employee)
    </select>
    <delete id="deleteByIds">
        <if test="ids != null and ids.size() != 0">
            delete from employee where id in
            <foreach collection="ids" item="id" separator="," open="(" close=")">
                #{id,jdbcType=INTEGER}
            </foreach>
        </if>
    </delete>

    <insert id="insertList">

        <if test="emps != null and emps.size() != 0">
            insert into employee (name, gender,
            birthday, idCard, wedlock, nationId,
            nativePlace, politicId, email,
            phone, address, departmentId,
            jobLevelId, posId, engageForm,
            tiptopDegree, specialty, school,
            beginDate,workID,
            contractTerm, conversionTime,
            beginContract, endContract, workAge
            )
            values
            <foreach collection="emps" item="emp" separator=",">
                (#{emp.name,jdbcType=VARCHAR}, #{emp.gender,jdbcType=CHAR},
                #{emp.birthday,jdbcType=DATE}, #{emp.idCard,jdbcType=CHAR}, #{emp.wedlock,jdbcType=CHAR},
                #{emp.nationId,jdbcType=BIGINT},
                #{emp.nativePlace,jdbcType=VARCHAR}, #{emp.politicId,jdbcType=BIGINT}, #{emp.email,jdbcType=VARCHAR},
                #{emp.phone,jdbcType=VARCHAR}, #{emp.address,jdbcType=VARCHAR}, #{emp.departmentId,jdbcType=BIGINT},
                #{emp.jobLevelId,jdbcType=BIGINT}, #{emp.posId,jdbcType=BIGINT}, #{emp.engageForm,jdbcType=VARCHAR},
                #{emp.tiptopDegree,jdbcType=VARCHAR}, #{emp.specialty,jdbcType=VARCHAR}, #{emp.school,jdbcType=VARCHAR},
                #{emp.beginDate,jdbcType=DATE},#{emp.workID,jdbcType=BIGINT},
                #{emp.contractTerm,jdbcType=BIGINT}, #{emp.conversionTime,jdbcType=DATE},
                #{emp.beginContract,jdbcType=DATE}, #{emp.endContract,jdbcType=DATE}, #{emp.workAge,jdbcType=INTEGER}
                )
            </foreach>
        </if>

    </insert>
    <select id="getEmpById" resultMap="BaseResultAllMap">
         select
        e.id,e.name,e.gender,e.birthday,e.idCard,e.wedlock,e.nationId,e.nativePlace,e.politicId,e.email,e.phone,e.address,e.departmentId,e.jobLevelId,e.posId,e.engageForm,e.tiptopDegree,e.specialty,e.school,e.beginDate,e.workState,e.workID,e.contractTerm,e.conversionTime,e.notWorkDate,e.beginContract,e.endContract,e.workAge,
        d.id as did,d.name as dname,d.parentId as dparentId,d.depPath as ddepPath,d.enabled as
        denabled,d.isParent as disParent,n.id as nid,n.name as nname,j.id as jid,j.name as jname,j.titleLevel as
        jtitleLevel,j.createDate as jcreateDate,j.enabled as jenabled,p.id as pid,p.name as pname,p.createDate as
        pcreateDate,p.enabled as penabled,pol.id as polid,pol.name as polname,s.id as sid,s.basicSalary as
        sbasicSalary,s.bonus as sbonus,s.lunchSalary as slunchSalary,s.trafficSalary as strafficSalary,s.allSalary as
        sallSalary,s.pensionBase as spensionBase,s.pensionPer as spensionPer,s.createDate as screateDate,s.medicalBase
        as smedicalBase,s.medicalPer as smedicalPer,s.accumulationFundBase as
        saccumulationFundBase,s.accumulationFundPer as saccumulationFundPer,s.name as sname from employee e left join
        department d on e.departmentId=d.id left join nation n on e.nationId=n.id left join joblevel j on
        e.jobLevelId=j.id left join position p on e.posId=p.id left join politicsstatus pol on e.politicId=pol.id left
        join empsalary es on e.id=es.eid left join salary s on es.sid=s.id
        <where>
            <if test="id != null">
                e.id=#{id,jdbcType=BIGINT}
            </if>
        </where>

    </select>
    <insert id="updateEmployeeSalaryById">
        REPLACE INTO empsalary (eid,sid) VALUES(#{eid},#{sid})
    </insert>


</mapper>
